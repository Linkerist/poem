#/bin/sh

# Compare the output of ./poem to correct output
# generated by earlier versions

POEM="../poem"
INDEX="../00-INDEX"
LONG_PREFIX="--"

# # First, make sure the executable exists
# 
# if test -x $POEM; then
# 	if test -d ./after; then
# 		echo '****'
# 		echo 'Errors remain; output directory still exists'
# 		echo '****'
# 		ls -ld ./after
# 		exit 1
# 	fi
# 	echo -n "Regression testing "
# 	$POEM --version
# 	echo
# else
# 	echo '****'
# 	echo First, you must make $POEM
# 	echo '****'
# 	echo
# 	exit 1
# fi

# Code to be tested with default options

OPTIONS=`cut -d ' ' -f 1 $INDEX`

for i in $OPTIONS; do
	# echo $LONG_PREFIX$i
	$POEM -npro $LONG_PREFIX$i before/$i.c -o output/$i.c
done

echo "Done."

# EXAMPLES="do.c else.c for.c func-def.c lshift.c ncs.c"
#
# mkdir after
# 
# echo -n "Generating indent et al with default settings..."
# 
# for i in $EXAMPLES; do
# 	$POEM -npro $i -o after/$i
# done
# 
# echo "Done."

# # Cases testing certain options
# echo -n "Generating special option examples..."
# 
# ARGS="-bad"
# $POEM -npro $ARGS bad-break.c -o after/bad-break.c
# 
# ERR=after/errors

# # Now diff all the new files with the old standard
# echo
# echo "Diffing generated code against standard..."
# 
# for i in $EXAMPLES; do
# 	echo -n ...$i...
# 
# 	if [ ! -f standard/$i ]; then
# 		echo ERROR: standard/$i missing
# 	fi
# 
# 	if [ ! -f output/$i ]; then
# 		echo ERROR: output/$i missing
# 	fi
# 
# 	diff --initial-tab standard/$i output/$i > output/$i-diffs 2>&1
# 
# 	if [ -s output/$i-diffs ]; then
# 		echo ERROR: $i failed | tee -a $ERR
# 	else
# 		rm output/$i-diffs
# 		echo
# 	fi
# done
# echo "Diffing generated code against standard...Done."
